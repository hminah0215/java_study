** 메소드의 return 값은 여러개 일 수 있다.
	거짓 !


public pro(){
	return a, b, c;      ==> 이런거 허용안됨. 메소드의 리턴타입은 1개! return a;
}

**여러개를 return하고 싶을때는
		====> 한 덩어리로 만들어요. 
			   (클래스, List)


=============================================================

<< 클래스 변수 >>
	정적변수(static변수)

	클래스의 맴버변수들은 일반적으로 객체를 생성해야지만 메모리가 확보되고 
	그리고 객체마다 별도의 메모리 공간을 갖습니다. 
	또, 그것을 사용하기 위해서는 반드시 객체를 통해서 사용할 수 있어요. 

	그런데 만약
	모든 객체가 공동으로 사용할 기억공간이 필요하다면
	혹은 객체없이도 사용할 기억공간이 필요하다면
	클래스 변수를 사용해요!
	멤버변수명 앞에 static 키워드를 붙이면 이것이 클래스변수(정적변수)라고
	하고, 객체를 생성하지 않아도 프로그램 실행하면 가장 먼저 메모리가 확보됩니다.
	그래서 객체없이도 사용할 수 있어요. 
	클래스 이름으로 접근합니다. 
	만약 객체가 있다면 객체를 통해서도 접근할 수 있어요! 


<< 클래스 메소드 >>
	일반적으로 어떤 클래스의 멤버메소드를 사용하기 위해서는 
	반드시 그 클래스의 객체를 생성하고 객체를 통해서만 사용할 수 있어요.(일반메소드)

	그런데 만약 객체없이도 어떤 메소드를 
	사용하도록 하려면 메소드 이름앞에 static 키워드를 붙여 
	클래스 메소드를 만들어요! 

	객체없이 접근해야하니 클래스이름으로 접근해요. 
	또, 만약 객체가 있다면 객체를 통해서도 접근할 수 있어요! 


==> 반드시 알아야 해요 *****

클래스 메소드 안에서는 클래스 멤버에만 접근할 수 있어요!
객체를 생성해야지만 사용할 수 있는 일반멤버에는 접근할 수 없어요! 

=============================================================

<< 클래스이름 앞의 public >>
==> 클래스 이름앞에는 public 접근명시자만 올 수 있어요. 
	private, protected 등은 올 수 없어요!
	
	즉, 클래스 이름앞에는 public 접근명시자를 붙이거나 생략하는 두가지 경우가 있어요. 
	클래스 이름 앞에 접근명시자가 생략된것은
		frienly의 개념입니다. 
		frienly란 이 클래스가 속해있는 동일한 패키지(폴더)는 모두 친구로 생각하여 
		이 클래스를 사용할 수 있음을 나타냅니다. 

		만약,이 클래스를 외부의 다른 패키지(폴더)에서도 사용할 수 있도록 하려면
		public 접근명시자를 붙여요.

=============================================================

일반적으로는 하나의 파일에는 
	하나의 클래스만 만들어요. 
	그래서 외부의 클래스로 부터 사용을 허용하느냐에 따라 
	public을 붙이거나 혹은 생략해요! 

=============================================================
만약 하나의 파일에
	여러개의 클래스를 정의한다면
	main 메소드를 포함한 클래스 이름으로
	파일명을 정해줘요! 
=============================================================

<< 객체지향 프로그래밍의 특징 >>
1. 은닉성(Encapsulation)
	외부의 다른 클래스로부터 멤버변수(속성)를 보호.

2. 상속성 (Inheritance)
	이미 만들어둔 클래스를 확장하여 새로운 클래스를 만들 수 있어요!

=============================================================
  숙제
  1) pdf 상속의 프로그래밍 1번, 3번, 4번 
  2) 랩 1번 *