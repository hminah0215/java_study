<< 예외(Exception) 처리 >>

사용자의 부주의 등으로 예기치 않는 상황이 발생하는 것을 "예외"라고 하고 
	그것에 대한 처리를 "예외처리" 라고 한다.


자바는 대부분의 일반적인 예외에 대해서 
이미 만들어져 있어요.
일반적인 상황에 대해서 예외 클래스가 만들어져 있어요. 
즉, 특정 예외상황이 되면 자바는 예외객체를 생성하여 예외를 발생시켜요! 


============================================================================

<< 예외 처리 방법 >>

try{
	예외가 발생할 만한 문장들.... 
}catch(예외자료형 변수명){
	예외가 발생이 되었을 때 처리할 문장들...
}


==============================================================================

<< RuntimeException >>

프로그램 실행중에 발생하는 예외를 말하며 
사용자가 특별히 예외처리 하지 않아도 자바가 예외처리를 해 줍니다.

RuntimeException이 아닌것들은
(Runtime Exception의 후손이 아닌것들)
반드시 사용자가 예외처리를 해야해요!!!!!!
===> 만약 예외처리를 하지 않는다면 컴파일이 되지않아요.


java.io		의 대부분의 클래스들의 생성자와 메소드들
java.net	의 대부분의 클래스들의 생성자와 메소드들


			

===============================================================================

<< throw >>

강제로 예외를 발생시키는 키워드입니다. 



<<사용자 정의 예외>>

자바 프로그램에서 보편적인 예외에 대해서는 미리 클래스화 되어있습니다. 
그런데 만약 어떤 특정한 상황을 예외로 만들고자 한다면 사용자가 예외를 
정의 할 수 있어요. 

==> 사용자 정의 예외 

이러한 사용자 정의예외는 그러한 상황이 되어도 
자바가 몰라요.
그래서 우리가 강제로 예외를 발생시켜야 해요. 

그때 사용하는 키워드가 throw 입니다.

throw new 사용자정의예외명();



<< 사용자 정의 예외 만드는 방법 >>

class 예외클래스이름  extends Exception{	<==예외클래스만들고
	public 예외클래스 (String msg){	<==예외클래스 생성자 만들기  
		super(msg);
	}
}


=======================================================================

<< finally >>

예외가 발생하거나 정상적으로 처리되거나 
반드시 동작시켜야할 내용이 있다면
finally에 기술합니다. (try와 함께 사용)


=======================================================================

<< 숙제 >> 

1. pdf 예외처리의 랩의 3번, 프로그래밍 3번(*) 
2. java Api String을 참고하여 
	사용자로부터 주민번호를 입력받아 올바른 주민번호인지 
	판별하는 프로그램을 작성합니다. 

	<실행 예>
	주민번호를 입력하세요 ==> 920404-2123456
	올바른 주민번호 입니다.
	올바른 주민번호가 아닙니다. 

	<처리조건> 
	ㄱ ㄴ ㄷ ㄹ ㅁ ㅂ - ㅅ ㅇ ㅈ ㅊ ㅋ ㅌ ㅍ
ㅍ = 11-{(2×ㄱ+3×ㄴ+4×ㄷ+5×ㄹ+6×ㅁ+7×ㅂ+8×ㅅ+9×ㅇ+2×ㅈ+3×ㅊ+4×ㅋ+5×ㅌ) mod 11}

mod : 나머지 연산 




